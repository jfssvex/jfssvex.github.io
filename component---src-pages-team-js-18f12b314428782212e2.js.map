{"version":3,"sources":["webpack:///./src/images/Andy.jpg","webpack:///./src/images/Vinesh.jpg","webpack:///./src/images/Rishab.jpg","webpack:///./src/images/Waris.jpg","webpack:///./src/images/Larry.jpg","webpack:///./src/components/footer.js","webpack:///./src/images/Rayhaan.jpg","webpack:///./src/images/Mihir.jpg","webpack:///./src/images/Jason.jpg","webpack:///./src/images/Owen.jpg","webpack:///./src/images/Shavaiz.png","webpack:///./node_modules/@chakra-ui/image/dist/esm/use-image.js","webpack:///./node_modules/@chakra-ui/image/dist/esm/image.js","webpack:///./src/pages/team.js","webpack:///./node_modules/@chakra-ui/layout/dist/esm/grid.js","webpack:///./node_modules/@chakra-ui/layout/dist/esm/simple-grid.js"],"names":["module","exports","Footer","data","year","as","h","justifyContent","borderTop","borderColor","alignItems","columns","spacing","style","textAlign","alignSelf","href","useImage","props","src","srcSet","onLoad","onError","crossOrigin","sizes","ignoreFallback","_useState","_useState2","status","setStatus","imageRef","load","flush","img","Image","srcset","onload","event","onerror","error","current","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","ref","htmlWidth","htmlHeight","rest","width","height","fallbackSrc","fallback","align","fit","loading","shouldIgnore","shared","objectFit","objectPosition","className","displayName","TeamPage","Date","getFullYear","heroText","px","size","rounded","pb","position","bg","borderRadius","boxSize","require","alt","fontSize","area","templateAreas","gap","rowGap","columnGap","column","row","autoFlow","autoRows","templateRows","autoColumns","templateColumns","div","display","gridArea","gridTemplateAreas","gridGap","gridRowGap","gridColumnGap","gridAutoColumns","gridColumn","gridRow","gridAutoFlow","gridAutoRows","gridTemplateRows","gridTemplateColumns","count","spacingX","spacingY","minChildWidth","Boolean","value","n"],"mappings":"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","file":"component---src-pages-team-js-18f12b314428782212e2.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/Andy-54c66c518b63a4f552d20a24894f26c1.jpg\";","module.exports = __webpack_public_path__ + \"static/Vinesh-33a630be2443ed69dd36f56fcce77476.jpg\";","module.exports = __webpack_public_path__ + \"static/Rishab-e8c3a17062fc7c2668d7f2a87083e8b9.jpg\";","module.exports = __webpack_public_path__ + \"static/Waris-8a9fa4c9e721a4253c66e46072ff0ba0.jpg\";","module.exports = __webpack_public_path__ + \"static/Larry-6b54bbf37ed82433b9e9741e6e4f34db.jpg\";","import React from \"react\"\nimport { Box, Flex, SimpleGrid, Text } from \"@chakra-ui/core\"\n\nfunction Footer({ data, year }) {\n  return (\n    <Flex\n      as=\"footer\"\n      h={20}\n      justifyContent=\"center\"\n      borderTop=\"1px\"\n      borderColor=\"gray.200\"\n      alignItems=\"center\"\n    >\n      <SimpleGrid columns={3} spacing={10}>\n        <Box as=\"span\">\n          <Text style={{ textAlign: \"left\", alignSelf: \"stretch\" }}>\n            JFSS Vex\n          </Text>\n        </Box>\n        <Box>Built by Vex Robotics Team ©{year}</Box>\n        <Box>\n          <a href=\"https://www.instagram.com/jfss_royals/\">\n            <Text style={{ textAlign: \"right\", alignSelf: \"stretch\" }}>\n              Instagram\n            </Text>\n          </a>\n        </Box>\n      </SimpleGrid>\n    </Flex>\n  )\n}\n\nexport default Footer\n","module.exports = __webpack_public_path__ + \"static/Rayhaan-a32a539285abd87f363cd0996f093225.jpg\";","module.exports = __webpack_public_path__ + \"static/Mihir-c05459743d63fd8925441d1b99a1d03e.jpg\";","module.exports = __webpack_public_path__ + \"static/Jason-736f465aedc0e93916250ade1422ee1c.jpg\";","module.exports = __webpack_public_path__ + \"static/Owen-c481af8969cd9cae1b158eab61436e87.jpg\";","module.exports = __webpack_public_path__ + \"static/Shavaiz-2d5c64e3d9713cc1a0bc37120a8267ab.png\";","import _slicedToArray from \"/home/runner/work/jfssvex.github.io/jfssvex.github.io/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { useSafeLayoutEffect } from \"@chakra-ui/hooks\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\n/**\n * React hook that loads an image in the browser,\n * and let's us know the `status` so we can show image\n * fallback if it's still `pending`\n *\n * @returns the status of the image loading progress\n *\n * @example\n *\n * ```jsx\n * function App(){\n *   const status = useImage({ src: \"image.png\" })\n *   return status === \"loaded\" ? <img src=\"image.png\" /> : <Placeholder />\n * }\n * ```\n */\n\nexport function useImage(props) {\n  var src = props.src,\n      srcSet = props.srcSet,\n      onLoad = props.onLoad,\n      onError = props.onError,\n      crossOrigin = props.crossOrigin,\n      sizes = props.sizes,\n      ignoreFallback = props.ignoreFallback;\n\n  var _useState = useState(function () {\n    return src ? \"loading\" : \"pending\";\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      status = _useState2[0],\n      setStatus = _useState2[1];\n\n  useEffect(function () {\n    setStatus(src ? \"loading\" : \"pending\");\n  }, [src]);\n  var imageRef = useRef();\n  var load = useCallback(function () {\n    if (!src) return;\n    flush();\n    var img = new Image();\n    img.src = src;\n\n    if (crossOrigin) {\n      img.crossOrigin = crossOrigin;\n    }\n\n    if (srcSet) {\n      img.srcset = srcSet;\n    }\n\n    if (sizes) {\n      img.sizes = sizes;\n    }\n\n    img.onload = function (event) {\n      flush();\n      setStatus(\"loaded\");\n      onLoad == null ? void 0 : onLoad(event);\n    };\n\n    img.onerror = function (error) {\n      flush();\n      setStatus(\"failed\");\n      onError == null ? void 0 : onError(error);\n    };\n\n    imageRef.current = img;\n  }, [src, crossOrigin, srcSet, sizes, onLoad, onError]);\n\n  var flush = function flush() {\n    if (imageRef.current) {\n      imageRef.current.onload = null;\n      imageRef.current.onerror = null;\n      imageRef.current = null;\n    }\n  };\n\n  useSafeLayoutEffect(function () {\n    /**\n     * If user opts out of the fallback/placeholder\n     * logic, let's bail out.\n     */\n    if (ignoreFallback) return;\n\n    if (status === \"loading\") {\n      load();\n    }\n\n    return function () {\n      flush();\n    };\n  }, [status, load, ignoreFallback]);\n  /**\n   * If user opts out of the fallback/placeholder\n   * logic, let's just return 'loaded'\n   */\n\n  return ignoreFallback ? \"loaded\" : status;\n}","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { omit, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { useImage } from \"./use-image\";\nvar NativeImage = /*#__PURE__*/React.forwardRef(function NativeImage(props, ref) {\n  var htmlWidth = props.htmlWidth,\n      htmlHeight = props.htmlHeight,\n      rest = _objectWithoutPropertiesLoose(props, [\"htmlWidth\", \"htmlHeight\"]);\n\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    width: htmlWidth,\n    height: htmlHeight,\n    ref: ref\n  }, rest));\n});\n/**\n * React component that renders an image with support\n * for fallbacks\n *\n * @see Docs https://chakra-ui.com/components/image\n */\n\nexport var Image = /*#__PURE__*/forwardRef(function Image(props, ref) {\n  var fallbackSrc = props.fallbackSrc,\n      fallback = props.fallback,\n      src = props.src,\n      align = props.align,\n      fit = props.fit,\n      loading = props.loading,\n      ignoreFallback = props.ignoreFallback,\n      crossOrigin = props.crossOrigin,\n      rest = _objectWithoutPropertiesLoose(props, [\"fallbackSrc\", \"fallback\", \"src\", \"align\", \"fit\", \"loading\", \"ignoreFallback\", \"crossOrigin\"]);\n  /**\n   * Defer to native `img` tag if `loading` prop is passed\n   * @see https://github.com/chakra-ui/chakra-ui/issues/1027\n   */\n\n\n  var shouldIgnore = loading != null || ignoreFallback;\n  var status = useImage(_extends({}, props, {\n    ignoreFallback: shouldIgnore\n  }));\n\n  var shared = _extends({\n    ref: ref,\n    objectFit: fit,\n    objectPosition: align\n  }, shouldIgnore ? rest : omit(rest, [\"onError\", \"onLoad\"]));\n\n  if (status !== \"loaded\") {\n    /**\n     * If user passed a custom fallback component,\n     * let's render it here.\n     */\n    if (fallback) return fallback;\n    return /*#__PURE__*/React.createElement(chakra.img, _extends({\n      as: NativeImage,\n      className: \"chakra-image__placeholder\",\n      src: fallbackSrc\n    }, shared));\n  }\n\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    as: NativeImage,\n    src: src,\n    crossOrigin: crossOrigin,\n    loading: loading,\n    className: \"chakra-image\"\n  }, shared));\n});\n/**\n * Fallback component for most SSR users who want to use the native `img` with\n * support for chakra props\n */\n\nexport var Img = /*#__PURE__*/forwardRef(function Img(props, ref) {\n  return /*#__PURE__*/React.createElement(chakra.img, _extends({\n    ref: ref,\n    as: NativeImage,\n    className: \"chakra-image\"\n  }, props));\n});\n\nif (__DEV__) {\n  Image.displayName = \"Image\";\n}","import React from \"react\"\nimport { Heading, Text, SimpleGrid, Image } from \"@chakra-ui/core\"\nimport { Box } from \"@chakra-ui/core\"\nimport Footer from \"../components/footer\"\n\nimport Layout from \"../components/layout\"\n\nconst TeamPage = () => {\n  const year = new Date().getFullYear() || \"2020\"\n\n  return (\n    <Layout heroText=\"JFSS Royals\">\n      <Box px={5} width=\"95vw\">\n        <Heading as=\"h2\" size=\"xl\" textAlign=\"center\">\n          Our Current Team\n        </Heading>\n        <br />\n        <SimpleGrid columns={3} spacing={50}>\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Waris.jpg\")}\n                alt=\"Waris Zahoor\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Waris Zahoor\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Waris is a grade 12 student at Fraser who is thrilled to be\n                  the Royals' team captain for the year. He leads the team\n                  during meetings/competitions and also doubles as one of the\n                  builders. He is super proud of what the team has accomplished\n                  over the years! Waris is looking forward to the new season and\n                  growing with the team!\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Rayhaan.jpg\")}\n                alt=\"Rayhaan Tanweer\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Rayhaan Tanweer\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Rayhaan is a Grade 12 student at JFSS. He is the Royals' lead\n                  programmer and driver for this season. This is Rayhaan's third\n                  year in VEX Robotics and he's eager to raise the team's\n                  autonomous routines to new heights. When he's not working on\n                  robotics code, he's probably just programming something else.\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Jason.jpg\")}\n                alt=\"Jason Huang\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Jason Huang\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Jason is a grade 12 student, executive member, and lead\n                  engineer in the Royals VEX Robotics team. He has been a part\n                  of VEX from it's inception back in his grade 9 year. Outside\n                  of VEX, he does software development, advocates for open\n                  source software, and does some photography on the side.\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n        </SimpleGrid>\n\n        <br />\n        <SimpleGrid columns={3} spacing={50}>\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Rishab.jpg\")}\n                alt=\"Rishabh Tamhane\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Rishabh Tamhane\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Rishabh is a Grade 12 Student, and is excited to be this\n                  year's Documentation and Strategy Lead! He joined the VEX team\n                  in Grade 10, and has probably attended the most meetings out\n                  of all the executive members. He also likes planes. Alot.\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Larry.jpg\")}\n                alt=\"Larry Wu\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Larry Wu\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Larry Wu is a Grade 12 student at JFSS and is excited to be a\n                  part of his school's VEX robotics team this year as a CAD\n                  Designer. He joined VEX in Grade 11. In his free time he\n                  enjoys, guitar, photography and traveling.\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Jason.jpg\")}\n                alt=\"Jason Huang\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Karen Ye\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Karen Ye is a Grade 12 student at John Fraser S.S. and is\n                  super excited to be apart of her school's VEX Robotics team\n                  this year as the media coordinator. She joined VEX this year\n                  to combine her love for graphic design and photography with\n                  content creation for all the club's media needs. In her free\n                  time, she loves hanging out with her friends and working on\n                  the yearbook.\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n        </SimpleGrid>\n\n        <br />\n        <SimpleGrid columns={3} spacing={50}>\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Mihir.jpg\")}\n                alt=\"Mihir Kachroo\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Mihir Kachroo\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Mihir Kachroo is a Grade 11 student at JFSS and is thrilled to\n                  be part of his school’s VEX Robotics team this year as a\n                  Programmer. He joined VEX in Grade 9 because of his interests\n                  in Robotics and team competitions. In his free time, he enjoys\n                  art, Ultimate Frisbee and developing cool apps!\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Shavaiz.png\")}\n                alt=\"Shavaiz Khan\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Shavaiz Khan\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Shavaiz Khan is a Grade 11 student at JFSS, who is apart of\n                  the VEX Robotics team at John Fraser, as a Programmer. He\n                  participated in the team in Grade 10 and is looking to carry\n                  it on forward into Grade 12. In his free time, he enjoys\n                  playing video games and watching Netflix.\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Owen.jpg\")}\n                alt=\"Owen Pan\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Owen Pan\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Owen is a Grade 11 student at JFSS and is glad to be part of\n                  his school’s VEX Robotics team this year as an Engineer. He\n                  joined VEX in Grade 10 because of his interest in robotics and\n                  the challenges of Vex. He enjoys math, science and learning\n                  new stuff.\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n        </SimpleGrid>\n\n        <br />\n        <SimpleGrid columns={3} spacing={50}>\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Andy.jpg\")}\n                alt=\"Andy Zhang\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Andy Zhang\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Hi, my name is Andy, and I'm a Grade 11 student attending\n                  Fraser this year. I've been part of the VEX team since Grade 9\n                  and I'm looking forward towards the upcoming year. I am a\n                  engineer and I enjoy playing video games, sleeping, and\n                  Youtube.\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n\n          <Box rounded=\"lg\" pb={8} position=\"relative\" bg={\"blue.100\"}>\n            <br />\n            <SimpleGrid columns={2} spacing={1}>\n              <Image\n                borderRadius=\"full\"\n                boxSize=\"150px\"\n                src={require(\"../images/Vinesh.jpg\")}\n                alt=\"Vinesh Vivekanand\"\n              />\n              <Box width=\"275px\">\n                <Heading as=\"h4\" size=\"md\">\n                  Vinesh Vivekanand\n                </Heading>\n                <Text fontSize=\"xs\">\n                  Vinesh is a grade 11 student at JFSS and is one of the\n                  engineers for the VEX Competition Team. He has been apart of\n                  VEX since grade 10 and works hard alongside his teammates to\n                  create a functioning robot that can help them win\n                  competitions. In his free time he likes playing a variety of\n                  video games and enjoys learning and researching about new\n                  electronics!\n                </Text>\n              </Box>\n            </SimpleGrid>\n          </Box>\n\n          <br />\n        </SimpleGrid>\n      </Box>\n\n      <Footer year={year} />\n    </Layout>\n  )\n}\n\nexport default TeamPage\n","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from \"react\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, __DEV__ } from \"@chakra-ui/utils\";\n/**\n * React component used to create grid layouts.\n *\n * It renders a `div` with `display: grid` and\n * comes with helpful style shorthand.\n *\n * @see Docs https://chakra-ui.com/components/grid\n */\n\nexport var Grid = /*#__PURE__*/forwardRef(function Grid(props, ref) {\n  var area = props.area,\n      templateAreas = props.templateAreas,\n      gap = props.gap,\n      rowGap = props.rowGap,\n      columnGap = props.columnGap,\n      column = props.column,\n      row = props.row,\n      autoFlow = props.autoFlow,\n      autoRows = props.autoRows,\n      templateRows = props.templateRows,\n      autoColumns = props.autoColumns,\n      templateColumns = props.templateColumns,\n      rest = _objectWithoutPropertiesLoose(props, [\"area\", \"templateAreas\", \"gap\", \"rowGap\", \"columnGap\", \"column\", \"row\", \"autoFlow\", \"autoRows\", \"templateRows\", \"autoColumns\", \"templateColumns\"]);\n\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    display: \"grid\",\n    gridArea: area,\n    gridTemplateAreas: templateAreas,\n    gridGap: gap,\n    gridRowGap: rowGap,\n    gridColumnGap: columnGap,\n    gridAutoColumns: autoColumns,\n    gridColumn: column,\n    gridRow: row,\n    gridAutoFlow: autoFlow,\n    gridAutoRows: autoRows,\n    gridTemplateRows: templateRows,\n    gridTemplateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  Grid.displayName = \"Grid\";\n}\n\nexport var GridColumn = /*#__PURE__*/forwardRef(function GridColumn(props, ref) {\n  var span = props.span,\n      start = props.start,\n      rest = _objectWithoutPropertiesLoose(props, [\"span\", \"start\"]);\n\n  var gridColumn = mapResponsive(span, function (v) {\n    return v === \"auto\" ? \"auto\" : \"span \" + v + \"/span \" + v;\n  });\n  return /*#__PURE__*/React.createElement(chakra.div, _extends({\n    ref: ref,\n    gridColumn: gridColumn,\n    gridColumnStart: start\n  }, rest));\n});","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport { forwardRef } from \"@chakra-ui/system\";\nimport { mapResponsive, isNumber, isNull, __DEV__ } from \"@chakra-ui/utils\";\nimport * as React from \"react\";\nimport { Grid } from \"./grid\";\n/**\n * SimpleGrid\n *\n * React component make that providers a simpler interface, and\n * make its easy to create responsive grid layouts.\n *\n * @see Docs https://chakra-ui.com/components/simplegrid\n */\n\nexport var SimpleGrid = /*#__PURE__*/forwardRef(function SimpleGrid(props, ref) {\n  var columns = props.columns,\n      spacingX = props.spacingX,\n      spacingY = props.spacingY,\n      spacing = props.spacing,\n      minChildWidth = props.minChildWidth,\n      rest = _objectWithoutPropertiesLoose(props, [\"columns\", \"spacingX\", \"spacingY\", \"spacing\", \"minChildWidth\"]);\n\n  var templateColumns = Boolean(minChildWidth) ? widthToColumns(minChildWidth) : countToColumns(columns);\n  return /*#__PURE__*/React.createElement(Grid, _extends({\n    ref: ref,\n    gap: spacing,\n    columnGap: spacingX,\n    rowGap: spacingY,\n    templateColumns: templateColumns\n  }, rest));\n});\n\nif (__DEV__) {\n  SimpleGrid.displayName = \"SimpleGrid\";\n}\n\nfunction toPx(n) {\n  return isNumber(n) ? n + \"px\" : n;\n}\n\nfunction widthToColumns(width) {\n  return mapResponsive(width, function (value) {\n    return isNull(value) ? null : \"repeat(auto-fit, minmax(\" + toPx(value) + \", 1fr))\";\n  });\n}\n\nfunction countToColumns(count) {\n  return mapResponsive(count, function (value) {\n    return isNull(value) ? null : \"repeat(\" + value + \", 1fr)\";\n  });\n}"],"sourceRoot":""}